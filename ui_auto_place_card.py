# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_auto_place_card.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import xlrd
from PyQt5 import QtCore, QtGui, QtWidgets
import tkinter
from tkinter import filedialog
import gendoc


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(350, 600)
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(10, 10, 331, 370))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.tableWidget.verticalHeader().setVisible(False)
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(10, 400, 230, 30))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton_append_name = QtWidgets.QPushButton(Dialog)
        self.pushButton_append_name.setGeometry(QtCore.QRect(270, 390, 70, 50))
        self.pushButton_append_name.setObjectName("pushButton_append_name")
        self.pushButton_import_names = QtWidgets.QPushButton(Dialog)
        self.pushButton_import_names.setGeometry(QtCore.QRect(20, 460, 131, 41))
        self.pushButton_import_names.setTabletTracking(False)
        self.pushButton_import_names.setObjectName("pushButton_import_names")
        self.pushButton_delete_name = QtWidgets.QPushButton(Dialog)
        self.pushButton_delete_name.setGeometry(QtCore.QRect(200, 460, 131, 41))
        self.pushButton_delete_name.setObjectName("pushButton_delete_name")
        self.pushButton_place_cards = QtWidgets.QPushButton(Dialog)
        self.pushButton_place_cards.setGeometry(QtCore.QRect(20, 530, 131, 41))
        self.pushButton_place_cards.setObjectName("pushButton_place_cards")
        self.pushButton_exit = QtWidgets.QPushButton(Dialog)
        self.pushButton_exit.setGeometry(QtCore.QRect(200, 530, 131, 41))
        self.pushButton_exit.setObjectName("pushButton_exit")


        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)



    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "自动批量生成席卡 - By YhGGk"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "序号"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "姓名"))
        self.pushButton_append_name.setText(_translate("Dialog", "增加姓名"))
        self.pushButton_import_names.setText(_translate("Dialog", "从表格导入姓名"))
        self.pushButton_delete_name.setText(_translate("Dialog", "删除勾选的姓名"))
        self.pushButton_place_cards.setText(_translate("Dialog", "生成席卡"))
        self.pushButton_exit.setText(_translate("Dialog", "退出程序"))
        self.lineEdit.setText("请在此输入姓名")

        # 设定列宽
        self.tableWidget.setColumnWidth(0, 25)
        self.tableWidget.setColumnWidth(1, 35)
        self.tableWidget.setColumnWidth(2, 269)

        # 按键绑定点击事件
        self.pushButton_exit.clicked.connect(self.click_pushbutton_exit_event)
        self.pushButton_append_name.clicked.connect(self.click_pushbutton_append_name_event)
        self.pushButton_delete_name.clicked.connect(self.click_pushbutton_delete_name_event)
        self.lineEdit.returnPressed.connect(self.click_pushbutton_append_name_event)
        self.pushButton_import_names.clicked.connect(self.click_pushButton_import_names_evnet)
        self.pushButton_place_cards.clicked.connect(self.click_pushButton_place_cards_evnet)

    def click_pushbutton_exit_event(self):
        # 退出程序
        exit()

    def click_pushbutton_append_name_event(self):
        # 将输入框中的姓名增加到列表中
        input_name = self.lineEdit.text()
        if input_name.strip() == "" or input_name == "请在此输入姓名" or input_name == "请正确输入":
            self.lineEdit.setText("请正确输入")
        else:
            self.append_name_function(input_name)

    def click_pushbutton_delete_name_event(self):
        # 删除勾选中的姓名
        rowcount = self.tableWidget.rowCount()
        for index in range(rowcount - 1, -1, -1):
            if self.tableWidget.item(index, 0).checkState() != 0:
                self.tableWidget.removeRow(index)
        for index in range(0, self.tableWidget.rowCount()):
            self.tableWidget.setItem(index, 1, QtWidgets.QTableWidgetItem(str(index + 1)))

    def append_name_function(self, name):
        # 给一个名字，添加到TABLEWIDGET中
        rowcount = self.tableWidget.rowCount()
        self.tableWidget.insertRow(rowcount)

        self.check = QtWidgets.QTableWidgetItem()
        self.new_id = QtWidgets.QTableWidgetItem(str(rowcount + 1))
        self.new_name = QtWidgets.QTableWidgetItem(name)
        self.check.setCheckState(QtCore.Qt.Unchecked)  # 把checkBox设为未选中状态
        self.tableWidget.setItem(rowcount, 0, self.check)  # 在(x,y)添加checkBox
        self.tableWidget.setItem(rowcount, 1, self.new_id)
        self.tableWidget.setItem(rowcount, 2, self.new_name)
        self.lineEdit.setText("")

    def click_pushButton_import_names_evnet(self):
        # 从文件中获取姓名

        # 获取名字文件路径
        root = tkinter.Tk()
        root.withdraw()
        file_path = filedialog.askopenfilename()

        # 读取文件姓名，并形成列表
        workbook = xlrd.open_workbook(file_path)
        # workbook = xlrd.open_workbook('names.xlsx')
        table = workbook.sheets()[0]
        row = table.nrows
        if row > 0:
            names = table.col_values(colx=0, start_rowx=0, end_rowx=None)
            for name in names:
                self.append_name_function(name)

    def click_pushButton_place_cards_evnet(self):
        # 获取列表中的所有姓名

        names = []
        if self.tableWidget.rowCount() > 0:
            for row_index in range(0, self.tableWidget.rowCount()):
                names.append(self.tableWidget.item(row_index, 2).text())
            place_cards = gendoc.Gendoc(names)
            place_cards.add_document()
            place_cards.doc_layout()
            place_cards.generate_table()
            place_cards.generate_place_cards()
            place_cards.word_visible()
